#!/usr/bin/env bash

# fail hard
set -o pipefail
# fail harder
set -eu

VENDOR_DIR=$(cd $(dirname $0); pwd)
TMPDIR=$(mktemp -d -t maven-build)

echo "---> Downloading sources..."
cd $TMPDIR
for MAVEN in $(cat ${VENDOR_DIR}/sources.txt)
do
  echo "     $MAVEN..."
  curl -O --silent --location $MAVEN
done

for FILE in apache-maven-*.tar.gz
do
  BUILD_DIR=build
  NAME=$(echo $FILE | sed -e 's/.*apache-\(maven-[0-9]*.[0-9]*.[0-9]*\)-bin.tar.gz/\1/g')
  TARBALL=${NAME}.tar.gz
  EXISTS=$(aws s3 ls s3://lang-jvm/${TARBALL} --profile lang-jvm)
  if [ -z "$EXISTS" ]; then
    echo "---> Building $NAME..."
    mkdir -p $BUILD_DIR/.m2/repository

    echo -n "     Unpacking..."
    tar xzvf $FILE -C $BUILD_DIR &> /dev/null
    mv ${BUILD_DIR}/apache-maven* ${BUILD_DIR}/.maven
    echo " done"

    echo -n "     Priming repository cache..."
    cd $BUILD_DIR
    cp $VENDOR_DIR/sample_pom.xml pom.xml
    .maven/bin/mvn -B -Duser.home=$BUILD_DIR clean package verify install:help &> /dev/null
    cd - &> /dev/null
    echo " done"

    echo -n "     Packaging..."
    tar -czvf ${TARBALL} -C ${BUILD_DIR} .maven .m2 &> /dev/null
    echo " done"

    echo -n "     Uploading..."
    aws s3 cp ${TARBALL} s3://lang-jvm --profile lang-jvm --acl public-read &> /dev/null
    echo " done"
    rm -rf $BUILD_DIR
  else
    echo "---> Skipping $NAME. Package already exists."
  fi
done

# todo get rid of this and just pipe curl to tar
rm apache-maven-*
